// Mocks generated by Mockito 5.3.2 from annotations
// in observador_app/test/domain/use_case/get_position_use_case_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:geolocator/geolocator.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:observador_app/modules/astro/domain/repository/geolocator_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePosition_0 extends _i1.SmartFake implements _i2.Position {
  _FakePosition_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GeolocatorRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeolocatorRepository extends _i1.Mock
    implements _i3.GeolocatorRepository {
  MockGeolocatorRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Position> getPosition() => (super.noSuchMethod(
        Invocation.method(
          #getPosition,
          [],
        ),
        returnValue: _i4.Future<_i2.Position>.value(_FakePosition_0(
          this,
          Invocation.method(
            #getPosition,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Position>);
}
